{"version":3,"file":"vue-carousel.system.js","sources":["../mixins/autoplay.js","../Navigation.vue","../Pagination.vue","../Carousel.vue","../utils/debounce.js","../Slide.vue","../index.js"],"sourcesContent":["const autoplay = {\n  props: {\n    /**\n     * Flag to enable autoplay\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Time elapsed before advancing slide\n     */\n    autoplayTimeout: {\n      type: Number,\n      default: 2000\n    },\n    /**\n     * Flag to pause autoplay on hover\n     */\n    autoplayHoverPause: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Autoplay direction. User can insert backward to make autoplay move from right to left\n     */\n    autoplayDirection: {\n      type: String,\n      default: \"forward\"\n    }\n  },\n  data() {\n    return {\n      autoplayInterval: null\n    };\n  },\n  destroyed() {\n    if (!this.$isServer) {\n      this.$el.removeEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.removeEventListener(\"mouseleave\", this.startAutoplay);\n    }\n  },\n  methods: {\n    pauseAutoplay() {\n      if (this.autoplayInterval) {\n        this.autoplayInterval = clearInterval(this.autoplayInterval);\n      }\n    },\n    startAutoplay() {\n      if (this.autoplay) {\n        this.autoplayInterval = setInterval(\n          this.autoplayAdvancePage,\n          this.autoplayTimeout\n        );\n      }\n    },\n    restartAutoplay() {\n      this.pauseAutoplay();\n      this.startAutoplay();\n    },\n    autoplayAdvancePage() {\n      this.advancePage(this.autoplayDirection);\n    }\n  },\n  mounted() {\n    if (!this.$isServer && this.autoplayHoverPause) {\n      this.$el.addEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.addEventListener(\"mouseleave\", this.startAutoplay);\n    }\n\n    this.startAutoplay();\n  }\n};\n\nexport default autoplay;\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <div class=\"VueCarousel-navigation\">\n    <button\n      type=\"button\"\n      aria-label=\"Previous page\"\n      :tabindex=\"canAdvanceBackward ? 0 : -1\"\n      class=\"VueCarousel-navigation-button VueCarousel-navigation-prev\"\n      :class=\"{ 'VueCarousel-navigation--disabled': !canAdvanceBackward }\"\n      :style=\"`padding: ${clickTargetSize}px; margin-right: -${clickTargetSize}px;`\"\n      @click.prevent=\"triggerPageAdvance('backward')\"\n      v-html=\"prevLabel\"\n    />\n    <button\n      type=\"button\"\n      aria-label=\"Next page\"\n      :tabindex=\"canAdvanceForward ? 0 : -1\"\n      class=\"VueCarousel-navigation-button VueCarousel-navigation-next\"\n      :class=\"{ 'VueCarousel-navigation--disabled': !canAdvanceForward }\"\n      :style=\"`padding: ${clickTargetSize}px; margin-left: -${clickTargetSize}px;`\"\n      @click.prevent=\"triggerPageAdvance('forward')\"\n      v-html=\"nextLabel\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"navigation\",\n  inject: [\"carousel\"],\n  props: {\n    /**\n     * Amount of padding to apply around the label in pixels\n     */\n    clickTargetSize: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * Text content of the navigation next button\n     */\n    nextLabel: {\n      type: String,\n      default: \"&#9654\",\n    },\n    /**\n     * Text content of the navigation prev button\n     */\n    prevLabel: {\n      type: String,\n      default: \"&#9664\",\n    },\n  },\nemits: ['navigationclick'],\n  computed: {\n    /**\n     * @return {boolean} Can the slider move forward?\n     */\n    canAdvanceForward() {\n      return this.carousel.canAdvanceForward || false;\n    },\n    /**\n     * @return {boolean} Can the slider move backward?\n     */\n    canAdvanceBackward() {\n      return this.carousel.canAdvanceBackward || false;\n    },\n  },\n  methods: {\n    /**\n     * Trigger page change on +/- 1 depending on the direction\n     * @param {\"backward\"} [direction]\n     * @return {void}\n     */\n    triggerPageAdvance(direction) {\n      /**\n       * @event paginationclick\n       * @type {string}\n       */\n      this.$emit(\"navigationclick\", direction);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.VueCarousel-navigation-button {\n  position: absolute;\n  top: 50%;\n  box-sizing: border-box;\n  color: #000;\n  text-decoration: none;\n  appearance: none;\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  outline: none;\n}\n\n.VueCarousel-navigation-button:focus {\n  outline: 1px solid lightblue;\n}\n\n.VueCarousel-navigation-next {\n  right: 0;\n  transform: translateY(-50%) translateX(100%);\n  font-family: \"system\";\n}\n\n.VueCarousel-navigation-prev {\n  left: 0;\n  transform: translateY(-50%) translateX(-100%);\n  font-family: \"system\";\n}\n\n.VueCarousel-navigation--disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n\n/* Define the \"system\" font family */\n@font-face {\n  font-family: system;\n  font-style: normal;\n  font-weight: 300;\n  src: local(\".SFNSText-Light\"), local(\".HelveticaNeueDeskInterface-Light\"),\n    local(\".LucidaGrandeUI\"), local(\"Ubuntu Light\"), local(\"Segoe UI Symbol\"),\n    local(\"Roboto-Light\"), local(\"DroidSans\"), local(\"Tahoma\");\n}\n</style>\n","<template>\n  <div\n    v-show=\"carousel.pageCount > 1\"\n    class=\"VueCarousel-pagination\"\n    :class=\"{ [`VueCarousel-pagination--${paginationPositionModifierName}`]: paginationPositionModifierName }\"\n  >\n    <div class=\"VueCarousel-dot-container\" role=\"tablist\" :style=\"dotContainerStyle\">\n      <button\n        v-for=\"(page, index) in paginationCount\"\n        :key=\"`${page}_${index}`\"\n        class=\"VueCarousel-dot\"\n        aria-hidden=\"false\"\n        role=\"tab\"\n        :title=\"getDotTitle(index)\"\n        :value=\"getDotTitle(index)\"\n        :aria-label=\"getDotTitle(index)\"\n        :aria-selected=\"isCurrentDot(index) ? 'true' : 'false'\"\n        :class=\"{ 'VueCarousel-dot--active': isCurrentDot(index) }\"\n        :style=\"dotStyle(index)\"\n        @click=\"goToPage(index)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"pagination\",\n  inject: [\"carousel\"],\nemits: ['paginationclick'],\n  computed: {\n    paginationPositionModifierName() {\n      const { paginationPosition } = this.carousel;\n      // guard to add only required class modifiers\n      if (!paginationPosition.includes(\"overlay\")) return;\n      return paginationPosition;\n    },\n    paginationPropertyBasedOnPosition() {\n      return this.carousel.paginationPosition.includes(\"top\")\n        ? \"bottom\"\n        : \"top\";\n    },\n    paginationCount() {\n      return this.carousel && this.carousel.scrollPerPage\n        ? this.carousel.pageCount\n        : this.carousel.slideCount || 0;\n    },\n    dotContainerStyle() {\n      const { carousel } = this;\n      if (carousel.maxPaginationDotCount === -1)\n        return {\n          \"margin-top\": `${carousel.paginationPadding * 2}px`\n        };\n      const doublePadding = carousel.paginationPadding * 2;\n      const containerWidth =\n        carousel.maxPaginationDotCount *\n        (carousel.paginationSize + doublePadding);\n      return {\n        \"margin-top\": `${carousel.paginationPadding * 2}px`,\n        overflow: \"hidden\",\n        width: `${containerWidth}px`,\n        margin: \"0 auto\",\n        \"white-space\": \"nowrap\"\n      };\n    }\n  },\n  methods: {\n    /**\n     * Change page by index\n     * @param {number} index\n     * return {void}\n     */\n    goToPage(index) {\n      /**\n       * @event paginationclick\n       * @type {number}\n       */\n      this.$emit(\"paginationclick\", index);\n    },\n\n    /**\n     * Check on current dot\n     * @param {number} index - dot index\n     * @return {boolean}\n     */\n    isCurrentDot(index) {\n      return index === this.carousel.currentPage;\n    },\n\n    /**\n     * Generate dot title\n     * @param {number} index - dot index\n     * @return {string}\n     */\n    getDotTitle(index) {\n      return this.carousel.$children[index].title\n        ? this.carousel.$children[index].title\n        : `Item ${index}`;\n    },\n    /**\n     * Control dots appear and disappear\n     * @param {number} index - dot index\n     * @return {object} - dot(buttn) style\n     */\n    dotStyle(index) {\n      const { carousel } = this;\n      const basicBtnStyle = {};\n      basicBtnStyle[\n        `margin-${this.paginationPropertyBasedOnPosition}`\n      ] = `${carousel.paginationPadding * 2}px`;\n\n      Object.assign(basicBtnStyle, {\n        padding: `${carousel.paginationPadding}px`,\n        width: `${carousel.paginationSize}px`,\n        height: `${carousel.paginationSize}px`,\n        \"background-color\": `${\n          this.isCurrentDot(index)\n            ? carousel.paginationActiveColor\n            : carousel.paginationColor\n        }`\n      });\n\n      if (carousel.maxPaginationDotCount === -1) return basicBtnStyle;\n\n      const eachDotsWidth =\n        carousel.paginationSize + carousel.paginationPadding * 2;\n      const maxReverse = carousel.pageCount - carousel.maxPaginationDotCount;\n      const translateAmount =\n        carousel.currentPage > maxReverse\n          ? maxReverse\n          : carousel.currentPage <= carousel.maxPaginationDotCount / 2\n            ? 0\n            : carousel.currentPage -\n              Math.ceil(carousel.maxPaginationDotCount / 2) +\n              1;\n      const transformWidth = 0 - eachDotsWidth * translateAmount;\n      return Object.assign(basicBtnStyle, {\n        \"-webkit-transform\": `translate3d(${transformWidth}px,0,0)`,\n        transform: `translate3d(${transformWidth}px,0,0)`,\n        \"-webkit-transition\": `-webkit-transform ${carousel.speed / 1000}s`,\n        transition: `transform ${carousel.speed / 1000}s`\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.VueCarousel-pagination {\n  width: 100%;\n  text-align: center;\n}\n\n.VueCarousel-pagination--top-overlay {\n  position: absolute;\n  top: 0;\n}\n\n.VueCarousel-pagination--bottom-overlay {\n  position: absolute;\n  bottom: 0;\n}\n\n.VueCarousel-dot-container {\n  display: inline-block;\n  margin: 0 auto;\n  padding: 0;\n}\n\n.VueCarousel-dot {\n  display: inline-block;\n  cursor: pointer;\n  appearance: none;\n  border: none;\n  background-clip: content-box;\n  box-sizing: content-box;\n  padding: 0;\n  border-radius: 100%;\n  outline: none;\n}\n\n.VueCarousel-dot:focus {\n  outline: 1px solid lightblue;\n}\n</style>\n","<template>\n  <div\n    class=\"VueCarousel\"\n    :class=\"{ 'VueCarousel--reverse': paginationPosition === 'top' }\"\n  >\n    <div ref=\"VueCarousel-wrapper\" class=\"VueCarousel-wrapper\">\n      <div\n        ref=\"VueCarousel-inner\"\n        :class=\"[\n          'VueCarousel-inner',\n          { 'VueCarousel-inner--center': isCenterModeEnabled },\n        ]\"\n        :style=\"{\n          transform: `translate(${currentOffset}px, 0)`,\n          transition: dragging ? 'none' : transitionStyle,\n          'ms-flex-preferred-size': `${slideWidth}px`,\n          'webkit-flex-basis': `${slideWidth}px`,\n          'flex-basis': `${slideWidth}px`,\n          visibility: slideWidth ? 'visible' : 'hidden',\n          height: `${currentHeight}`,\n          'padding-left': `${padding}px`,\n          'padding-right': `${padding}px`,\n        }\"\n      >\n        <slot />\n      </div>\n    </div>\n\n    <slot v-if=\"navigationEnabled\" name=\"navigation\">\n      <navigation\n        v-if=\"isNavigationRequired\"\n        :click-target-size=\"navigationClickTargetSize\"\n        :next-label=\"navigationNextLabel\"\n        :prev-label=\"navigationPrevLabel\"\n        @navigationclick=\"handleNavigation\"\n      />\n    </slot>\n\n    <slot v-if=\"paginationEnabled\" name=\"pagination\">\n      <pagination @paginationclick=\"goToPage($event, 'pagination')\" />\n    </slot>\n  </div>\n</template>\n<script>\nimport autoplay from \"./mixins/autoplay\";\nimport debounce from \"./utils/debounce\";\nimport Navigation from \"./Navigation.vue\";\nimport Pagination from \"./Pagination.vue\";\n\nconst transitionEndNames = {\n  onwebkittransitionend: \"webkitTransitionEnd\",\n  onmoztransitionend: \"transitionend\",\n  onotransitionend: \"oTransitionEnd otransitionend\",\n  ontransitionend: \"transitionend\",\n};\nconst getTransitionEnd = () => {\n  for (const name in transitionEndNames) {\n    if (name in window) {\n      return transitionEndNames[name];\n    }\n  }\n};\n\nexport default {\n  name: \"carousel\",\n  components: {\n    Navigation,\n    Pagination,\n  },\n  mixins: [autoplay],\n  // use `provide` to avoid `Slide` being nested with other components\n  provide() {\n    return {\n      carousel: this,\n    };\n  },\n  props: {\n    /**\n     *  Adjust the height of the carousel for the current slide\n     */\n    adjustableHeight: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Slide transition easing for adjustableHeight\n     * Any valid CSS transition easing accepted\n     */\n    adjustableHeightEasing: {\n      type: String,\n      default: \"ease\",\n    },\n    /**\n     *  Center images when the size is less than the container width\n     */\n    centerMode: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Slide transition easing\n     * Any valid CSS transition easing accepted\n     */\n    easing: {\n      type: String,\n      validator: function (value) {\n        return (\n          [\"ease\", \"linear\", \"ease-in\", \"ease-out\", \"ease-in-out\"].includes(\n            value\n          ) || value.includes(\"cubic-bezier\")\n        );\n      },\n      default: \"ease\",\n    },\n    /**\n     * Flag to make the carousel loop around when it reaches the end\n     */\n    loop: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Minimum distance for the swipe to trigger\n     * a slide advance\n     */\n    minSwipeDistance: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * Flag to toggle mouse dragging\n     */\n    mouseDrag: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Flag to toggle touch dragging\n     */\n    touchDrag: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Listen for an external navigation request using this prop.\n     */\n    navigateTo: {\n      type: [Number, Array],\n      default: 0,\n    },\n    /**\n     * Amount of padding to apply around the label in pixels\n     */\n    navigationClickTargetSize: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * Flag to render the navigation component\n     * (next/prev buttons)\n     */\n    navigationEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Text content of the navigation next button\n     */\n    navigationNextLabel: {\n      type: String,\n      default: \"&#9654\",\n    },\n    /**\n     * Text content of the navigation prev button\n     */\n    navigationPrevLabel: {\n      type: String,\n      default: \"&#9664\",\n    },\n    /**\n     * The fill color of the active pagination dot\n     * Any valid CSS color is accepted\n     */\n    paginationActiveColor: {\n      type: String,\n      default: \"#000000\",\n    },\n    /**\n     * The fill color of pagination dots\n     * Any valid CSS color is accepted\n     */\n    paginationColor: {\n      type: String,\n      default: \"#efefef\",\n    },\n    /**\n     * Flag to render pagination component\n     */\n    paginationEnabled: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * The padding inside each pagination dot\n     * Pixel values are accepted\n     */\n    paginationPadding: {\n      type: Number,\n      default: 10,\n    },\n    /**\n     * Configure the position for the pagination component.\n     * The possible values are: 'bottom', 'top', 'bottom-overlay' and 'top-overlay'\n     */\n    paginationPosition: {\n      type: String,\n      default: \"bottom\",\n    },\n    /**\n     * The size of each pagination dot\n     * Pixel values are accepted\n     */\n    paginationSize: {\n      type: Number,\n      default: 10,\n    },\n    /**\n     * Maximum number of slides displayed on each page\n     */\n    perPage: {\n      type: Number,\n      default: 2,\n    },\n    /**\n     * Configure the number of visible slides with a particular browser width.\n     * This will be an array of arrays, ex. [[320, 2], [1199, 4]]\n     * Formatted as [x, y] where x=browser width, and y=number of slides displayed.\n     * ex. [1199, 4] means if (window <= 1199) then show 4 slides per page\n     */\n    // eslint-disable-next-line vue/require-default-prop\n    perPageCustom: {\n      type: Array,\n    },\n    /**\n     * Resistance coefficient to dragging on the edge of the carousel\n     * This dictates the effect of the pull as you move towards the boundaries\n     */\n    resistanceCoef: {\n      type: Number,\n      default: 20,\n    },\n    /**\n     * Scroll per page, not per item\n     */\n    scrollPerPage: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     *  Space padding option adds left and right padding style (in pixels) onto VueCarousel-inner.\n     */\n    spacePadding: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     *  Specify by how much should the space padding value be multiplied of, to re-arange the final slide padding.\n     */\n    spacePaddingMaxOffsetFactor: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * Slide transition speed\n     * Number of milliseconds accepted\n     */\n    speed: {\n      type: Number,\n      default: 500,\n    },\n    /**\n     * Name (tag) of slide component\n     * Overwrite when extending slide component\n     */\n    tagName: {\n      type: String,\n      default: \"slide\",\n    },\n    /**\n     * Support for v-model functionality\n     */\n    // eslint-disable-next-line vue/require-default-prop\n    value: {\n      type: Number,\n    },\n    /**\n     * Support Max pagination dot amount\n     */\n    maxPaginationDotCount: {\n      type: Number,\n      default: -1,\n    },\n    /**\n     * Support right to left\n     */\n    rtl: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\n    \"transition-end\",\n    \"transitionEnd\",\n    \"transition-start\",\n    \"transitionStart\",\n    \"pagination-click\",\n    \"navigation-click\",\n    \"mounted\",\n    \"pageChange\",\n    \"page-change\",\n    \"input\",\n  ],\n  data() {\n    return {\n      browserWidth: null,\n      carouselWidth: 0,\n      currentPage: 0,\n      dragging: false,\n      dragMomentum: 0,\n      dragOffset: 0,\n      dragStartY: 0,\n      dragStartX: 0,\n      isTouch: typeof window !== \"undefined\" && \"ontouchstart\" in window,\n      offset: 0,\n      refreshRate: 16,\n      slideCount: 0,\n      transitionstart: \"transitionstart\",\n      transitionend: \"transitionend\",\n      currentHeight: \"auto\",\n    };\n  },\n  computed: {\n    /**\n     * Given a viewport width, find the number of slides to display\n     * @return {number} Number of slides to display\n     */\n    breakpointSlidesPerPage() {\n      if (!this.perPageCustom) {\n        return this.perPage;\n      }\n\n      const breakpointArray = this.perPageCustom;\n      const width = this.browserWidth;\n\n      const breakpoints = breakpointArray.sort((a, b) =>\n        a[0] > b[0] ? -1 : 1\n      );\n\n      // Reduce the breakpoints to entries where the width is in range\n      // The breakpoint arrays are formatted as [widthToMatch, numberOfSlides]\n      const matches = breakpoints.filter(\n        (breakpoint) => width >= breakpoint[0]\n      );\n\n      // If there is a match, the result should return only\n      // the slide count from the first matching breakpoint\n      const match = matches[0] && matches[0][1];\n\n      return match || this.perPage;\n    },\n    /**\n     * @return {boolean} Can the slider move forward?\n     */\n    canAdvanceForward() {\n      return this.loop || this.offset < this.maxOffset;\n    },\n    /**\n     * @return {boolean} Can the slider move backward?\n     */\n    canAdvanceBackward() {\n      return this.loop || this.currentPage > 0;\n    },\n    /**\n     * Number of slides to display per page in the current context.\n     * This is constant unless responsive perPage option is set.\n     * @return {number} The number of slides per page to display\n     */\n    currentPerPage() {\n      return !this.perPageCustom || this.$isServer\n        ? this.perPage\n        : this.breakpointSlidesPerPage;\n    },\n    /**\n     * The horizontal distance the inner wrapper is offset while navigating.\n     * @return {number} Pixel value of offset to apply\n     */\n    currentOffset() {\n      if (this.isCenterModeEnabled) {\n        return 0;\n      } else if (this.rtl) {\n        return (this.offset - this.dragOffset) * 1;\n      } else {\n        return (this.offset + this.dragOffset) * -1;\n      }\n    },\n    isHidden() {\n      return this.carouselWidth <= 0;\n    },\n    /**\n     * Maximum offset the carousel can slide\n     * Considering the spacePadding\n     * @return {number}\n     */\n    maxOffset() {\n      return Math.max(\n        this.slideWidth * (this.slideCount - this.currentPerPage) -\n          this.spacePadding * this.spacePaddingMaxOffsetFactor,\n        0\n      );\n    },\n    /**\n     * Calculate the number of pages of slides\n     * @return {number} Number of pages\n     */\n    pageCount() {\n      return this.scrollPerPage\n        ? Math.ceil(this.slideCount / this.currentPerPage)\n        : this.slideCount - this.currentPerPage + 1;\n    },\n    /**\n     * Calculate the width of each slide\n     * @return {number} Slide width\n     */\n    slideWidth() {\n      const width = this.carouselWidth - this.spacePadding * 2;\n      const perPage = this.currentPerPage;\n\n      return width / perPage;\n    },\n    /**\n     * @return {boolean} Is navigation required?\n     */\n    isNavigationRequired() {\n      return this.slideCount > this.currentPerPage;\n    },\n    /**\n     * @return {boolean} Center images when have less than min currentPerPage value\n     */\n    isCenterModeEnabled() {\n      return this.centerMode && !this.isNavigationRequired;\n    },\n    transitionStyle() {\n      const speed = `${this.speed / 1000}s`;\n      const transtion = `${speed} ${this.easing} transform`;\n      if (this.adjustableHeight) {\n        return `${transtion}, height ${speed} ${\n          this.adjustableHeightEasing || this.easing\n        }`;\n      }\n\n      return transtion;\n    },\n    padding() {\n      const padding = this.spacePadding;\n      return padding > 0 ? padding : false;\n    },\n  },\n  watch: {\n    value(val) {\n      if (val !== this.currentPage) {\n        this.goToPage(val);\n        this.render();\n      }\n    },\n    navigateTo: {\n      immediate: true,\n      handler(val) {\n        // checking if val is an array, for arrays typeof returns object\n        if (typeof val === \"object\") {\n          if (val[1] == false) {\n            // following code is to disable animation\n            this.dragging = true;\n\n            // clear dragging after refresh rate\n            setTimeout(() => {\n              this.dragging = false;\n            }, this.refreshRate);\n          }\n\n          this.$nextTick(() => {\n            this.goToPage(val[0]);\n          });\n        } else {\n          this.$nextTick(() => {\n            this.goToPage(val);\n          });\n        }\n      },\n    },\n    currentPage(val) {\n      this.$emit(\"pageChange\", val);\n      this.$emit(\"page-change\", val);\n      this.$emit(\"input\", val);\n    },\n    autoplay(val) {\n      if (val === false) {\n        this.pauseAutoplay();\n      } else {\n        this.restartAutoplay();\n      }\n    },\n  },\n  beforeUpdate() {\n    this.computeCarouselWidth();\n  },\n  beforeUnmount() {\n    this.detachMutationObserver();\n    window.removeEventListener(\"resize\", this.getBrowserWidth);\n    this.$refs[\"VueCarousel-inner\"].removeEventListener(\n      this.transitionstart,\n      this.handleTransitionStart\n    );\n    this.$refs[\"VueCarousel-inner\"].removeEventListener(\n      this.transitionend,\n      this.handleTransitionEnd\n    );\n\n    this.$refs[\"VueCarousel-wrapper\"].removeEventListener(\n      this.isTouch ? \"touchstart\" : \"mousedown\",\n      this.onStart\n    );\n  },\n  mounted() {\n    window.addEventListener(\n      \"resize\",\n      debounce(this.onResize, this.refreshRate)\n    );\n\n    // setup the start event only if touch device or mousedrag activated\n    if ((this.isTouch && this.touchDrag) || this.mouseDrag) {\n      this.$refs[\"VueCarousel-wrapper\"].addEventListener(\n        this.isTouch ? \"touchstart\" : \"mousedown\",\n        this.onStart\n      );\n    }\n\n    this.attachMutationObserver();\n    this.computeCarouselWidth();\n    this.computeCarouselHeight();\n\n    this.transitionstart = getTransitionEnd();\n    this.$refs[\"VueCarousel-inner\"].addEventListener(\n      this.transitionstart,\n      this.handleTransitionStart\n    );\n    this.transitionend = getTransitionEnd();\n    this.$refs[\"VueCarousel-inner\"].addEventListener(\n      this.transitionend,\n      this.handleTransitionEnd\n    );\n\n    this.$emit(\"mounted\");\n\n    // when autoplay direction is backward start from the last slide\n    if (this.autoplayDirection === \"backward\") {\n      this.goToLastSlide();\n    }\n  },\n  methods: {\n    /**\n     * @return {number} The index of the next page\n     */\n    getNextPage() {\n      if (this.currentPage < this.pageCount - 1) {\n        return this.currentPage + 1;\n      }\n      return this.loop ? 0 : this.currentPage;\n    },\n    /**\n     * @return {number} The index of the previous page\n     */\n    getPreviousPage() {\n      if (this.currentPage > 0) {\n        return this.currentPage - 1;\n      }\n      return this.loop ? this.pageCount - 1 : this.currentPage;\n    },\n    /**\n     * Increase/decrease the current page value\n     * @param  {string} direction (Optional) The direction to advance\n     */\n    advancePage(direction) {\n      if (direction && direction === \"backward\" && this.canAdvanceBackward) {\n        this.goToPage(this.getPreviousPage(), \"navigation\");\n      } else if (\n        (!direction || (direction && direction !== \"backward\")) &&\n        this.canAdvanceForward\n      ) {\n        this.goToPage(this.getNextPage(), \"navigation\");\n      }\n    },\n    goToLastSlide() {\n      // following code is to disable animation\n      this.dragging = true;\n\n      // clear dragging after refresh rate\n      setTimeout(() => {\n        this.dragging = false;\n      }, this.refreshRate);\n\n      this.$nextTick(() => {\n        this.goToPage(this.pageCount);\n      });\n    },\n    /**\n     * A mutation observer is used to detect changes to the containing node\n     * in order to keep the magnet container in sync with the height its reference node.\n     */\n    attachMutationObserver() {\n      const MutationObserver =\n        window.MutationObserver ||\n        window.WebKitMutationObserver ||\n        window.MozMutationObserver;\n\n      if (MutationObserver) {\n        let config = {\n          attributes: true,\n          data: true,\n        };\n        if (this.adjustableHeight) {\n          config = {\n            ...config,\n            childList: true,\n            subtree: true,\n            characterData: true,\n          };\n        }\n        this.mutationObserver = new MutationObserver(() => {\n          this.$nextTick(() => {\n            this.computeCarouselWidth();\n            this.computeCarouselHeight();\n          });\n        });\n        if (this.$parent.$el) {\n          const carouselInnerElements =\n            this.$el.getElementsByClassName(\"VueCarousel-inner\");\n          for (let i = 0; i < carouselInnerElements.length; i++) {\n            this.mutationObserver.observe(carouselInnerElements[i], config);\n          }\n        }\n      }\n    },\n    handleNavigation(direction) {\n      this.advancePage(direction);\n      this.pauseAutoplay();\n      this.$emit(\"navigation-click\", direction);\n    },\n    /**\n     * Stop listening to mutation changes\n     */\n    detachMutationObserver() {\n      if (this.mutationObserver) {\n        this.mutationObserver.disconnect();\n      }\n    },\n    /**\n     * Get the current browser viewport width\n     * @return {number} Browser\"s width in pixels\n     */\n    getBrowserWidth() {\n      this.browserWidth = window.innerWidth;\n      return this.browserWidth;\n    },\n    /**\n     * Get the width of the carousel DOM element\n     * @return {number} Width of the carousel in pixels\n     */\n    getCarouselWidth() {\n      const carouselInnerElements =\n        this.$el.getElementsByClassName(\"VueCarousel-inner\");\n      for (let i = 0; i < carouselInnerElements.length; i++) {\n        if (carouselInnerElements[i].clientWidth > 0) {\n          this.carouselWidth = carouselInnerElements[i].clientWidth || 0;\n        }\n      }\n      return this.carouselWidth;\n    },\n    /**\n     * Get the maximum height of the carousel active slides\n     * @return {string} The carousel height\n     */\n    getCarouselHeight() {\n      if (!this.adjustableHeight) {\n        return \"auto\";\n      }\n\n      const slideOffset = this.currentPerPage * (this.currentPage + 1) - 1;\n      const maxSlideHeight = [...Array(this.currentPerPage)]\n        .map((_, idx) => this.getSlide(slideOffset + idx))\n        .reduce(\n          (clientHeight, slide) =>\n            Math.max(clientHeight, (slide && slide.$el.clientHeight) || 0),\n          0\n        );\n\n      this.currentHeight =\n        maxSlideHeight === 0 ? \"auto\" : `${maxSlideHeight}px`;\n\n      return this.currentHeight;\n    },\n    /**\n     * Filter slot contents to slide instances and return length\n     * @return {number} The number of slides\n     */\n    getSlideCount() {\n      this.slideCount =\n        (this.$slots &&\n          this.$slots.default &&\n          this.$slots.default.filter(\n            (slot) =>\n              slot.tag &&\n              slot.tag.match(`^vue-component-\\\\d+-${this.tagName}$`) !== null\n          ).length) ||\n        0;\n    },\n    /**\n     * Gets the slide at the specified index\n     * @return {object} The slide at the specified index\n     */\n    getSlide(index) {\n      const slides = this.$children.filter(\n        (child) =>\n          child.$vnode.tag.match(`^vue-component-\\\\d+-${this.tagName}$`) !==\n          null\n      );\n      return slides[index];\n    },\n    /**\n     * Set the current page to a specific value\n     * This function will only apply the change if the value is within the carousel bounds\n     * for carousel scrolling per page.\n     * @param  {number} page The value of the new page number\n     * @param  {string|undefined} advanceType An optional value describing the type of page advance\n     */\n    goToPage(page, advanceType) {\n      if (page >= 0 && page <= this.pageCount) {\n        this.offset = this.scrollPerPage\n          ? Math.min(\n              this.slideWidth * this.currentPerPage * page,\n              this.maxOffset\n            )\n          : this.slideWidth * page;\n\n        // restart autoplay if specified\n        if (this.autoplay && !this.autoplayHoverPause) {\n          this.restartAutoplay();\n        }\n\n        // update the current page\n        this.currentPage = page;\n\n        if (advanceType === \"pagination\") {\n          this.pauseAutoplay();\n          this.$emit(\"pagination-click\", page);\n        }\n      }\n    },\n    /**\n     * Trigger actions when mouse is pressed\n     * @param  {object} e The event object\n     */\n    /* istanbul ignore next */\n    onStart(e) {\n      // alert(\"start\");\n\n      // detect right click\n      if (e.button == 2) {\n        return;\n      }\n\n      document.addEventListener(\n        this.isTouch ? \"touchend\" : \"mouseup\",\n        this.onEnd,\n        true\n      );\n\n      document.addEventListener(\n        this.isTouch ? \"touchmove\" : \"mousemove\",\n        this.onDrag,\n        true\n      );\n\n      this.startTime = e.timeStamp;\n      this.dragging = true;\n      this.dragStartX = this.isTouch ? e.touches[0].clientX : e.clientX;\n      this.dragStartY = this.isTouch ? e.touches[0].clientY : e.clientY;\n    },\n    /**\n     * Trigger actions when mouse is released\n     * @param  {object} e The event object\n     */\n\n    onEnd(e) {\n      // restart autoplay if specified\n      if (this.autoplay && !this.autoplayHoverPause) {\n        this.restartAutoplay();\n      }\n      this.pauseAutoplay();\n\n      // compute the momemtum speed\n      const eventPosX = this.isTouch ? e.changedTouches[0].clientX : e.clientX;\n      const deltaX = this.dragStartX - eventPosX;\n      this.dragMomentum = deltaX / (e.timeStamp - this.startTime);\n\n      // take care of the minSwipteDistance prop, if not 0 and delta is bigger than delta\n      if (\n        this.minSwipeDistance !== 0 &&\n        Math.abs(deltaX) >= this.minSwipeDistance\n      ) {\n        const width = this.scrollPerPage\n          ? this.slideWidth * this.currentPerPage\n          : this.slideWidth;\n        this.dragOffset = this.dragOffset + Math.sign(deltaX) * (width / 2);\n      }\n\n      if (this.rtl) {\n        this.offset -= this.dragOffset;\n      } else {\n        this.offset += this.dragOffset;\n      }\n      this.dragOffset = 0;\n      this.dragging = false;\n\n      this.render();\n\n      // clear events listeners\n      document.removeEventListener(\n        this.isTouch ? \"touchend\" : \"mouseup\",\n        this.onEnd,\n        true\n      );\n      document.removeEventListener(\n        this.isTouch ? \"touchmove\" : \"mousemove\",\n        this.onDrag,\n        true\n      );\n    },\n    /**\n     * Trigger actions when mouse is pressed and then moved (mouse drag)\n     * @param  {object} e The event object\n     */\n    onDrag(e) {\n      const eventPosX = this.isTouch ? e.touches[0].clientX : e.clientX;\n      const eventPosY = this.isTouch ? e.touches[0].clientY : e.clientY;\n      const newOffsetX = this.dragStartX - eventPosX;\n      const newOffsetY = this.dragStartY - eventPosY;\n\n      // if it is a touch device, check if we are below the min swipe threshold\n      // (if user scroll the page on the component)\n      if (this.isTouch && Math.abs(newOffsetX) < Math.abs(newOffsetY)) {\n        return;\n      }\n\n      e.stopImmediatePropagation();\n\n      this.dragOffset = newOffsetX;\n      const nextOffset = this.offset + this.dragOffset;\n\n      if (this.rtl) {\n        if (this.offset == 0 && this.dragOffset > 0) {\n          this.dragOffset = Math.sqrt(this.resistanceCoef * this.dragOffset);\n        } else if (this.offset == this.maxOffset && this.dragOffset < 0) {\n          this.dragOffset = -Math.sqrt(-this.resistanceCoef * this.dragOffset);\n        }\n      } else {\n        if (nextOffset < 0) {\n          this.dragOffset = -Math.sqrt(-this.resistanceCoef * this.dragOffset);\n        } else if (nextOffset > this.maxOffset) {\n          this.dragOffset = Math.sqrt(this.resistanceCoef * this.dragOffset);\n        }\n      }\n    },\n    onResize() {\n      this.computeCarouselWidth();\n      this.computeCarouselHeight();\n\n      this.dragging = true; // force a dragging to disable animation\n      this.render();\n      // clear dragging after refresh rate\n      setTimeout(() => {\n        this.dragging = false;\n      }, this.refreshRate);\n    },\n    render() {\n      // add extra slides depending on the momemtum speed\n      if (this.rtl) {\n        this.offset -=\n          Math.max(\n            -this.currentPerPage + 1,\n            Math.min(Math.round(this.dragMomentum), this.currentPerPage - 1)\n          ) * this.slideWidth;\n      } else {\n        this.offset +=\n          Math.max(\n            -this.currentPerPage + 1,\n            Math.min(Math.round(this.dragMomentum), this.currentPerPage - 1)\n          ) * this.slideWidth;\n      }\n\n      // & snap the new offset on a slide or page if scrollPerPage\n      const width = this.scrollPerPage\n        ? this.slideWidth * this.currentPerPage\n        : this.slideWidth;\n\n      // lock offset to either the nearest page, or to the last slide\n      const lastFullPageOffset =\n        width * Math.floor(this.slideCount / (this.currentPerPage - 1));\n      const remainderOffset =\n        lastFullPageOffset +\n        this.slideWidth * (this.slideCount % this.currentPerPage);\n      if (this.offset > (lastFullPageOffset + remainderOffset) / 2) {\n        this.offset = remainderOffset;\n      } else {\n        this.offset = width * Math.round(this.offset / width);\n      }\n\n      // clamp the offset between 0 -> maxOffset\n      this.offset = Math.max(0, Math.min(this.offset, this.maxOffset));\n\n      // update the current page\n      this.currentPage = this.scrollPerPage\n        ? Math.round(this.offset / this.slideWidth / this.currentPerPage)\n        : Math.round(this.offset / this.slideWidth);\n    },\n    /**\n     * Re-compute the width of the carousel and its slides\n     */\n    computeCarouselWidth() {\n      this.getSlideCount();\n      this.getBrowserWidth();\n      this.getCarouselWidth();\n      this.setCurrentPageInBounds();\n    },\n    /**\n     * Re-compute the height of the carousel and its slides\n     */\n    computeCarouselHeight() {\n      this.getCarouselHeight();\n    },\n    /**\n     * When the current page exceeds the carousel bounds, reset it to the maximum allowed\n     */\n    setCurrentPageInBounds() {\n      if (!this.canAdvanceForward && this.scrollPerPage) {\n        const setPage = this.pageCount - 1;\n        this.currentPage = setPage >= 0 ? setPage : 0;\n        this.offset = Math.max(0, Math.min(this.offset, this.maxOffset));\n      }\n    },\n    handleTransitionStart() {\n      this.$emit(\"transitionStart\");\n      this.$emit(\"transition-start\");\n    },\n    handleTransitionEnd() {\n      this.$emit(\"transitionEnd\");\n      this.$emit(\"transition-end\");\n    },\n  },\n};\n</script>\n<style>\n.VueCarousel {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.VueCarousel--reverse {\n  flex-direction: column-reverse;\n}\n\n.VueCarousel-wrapper {\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n}\n\n.VueCarousel-inner {\n  display: flex;\n  flex-direction: row;\n  backface-visibility: hidden;\n}\n\n.VueCarousel-inner--center {\n  justify-content: center;\n}\n</style>\n","/*\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n*/\nconst debounce = (func, wait, immediate) => {\n  let timeout;\n  return () => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context);\n    }\n  };\n};\n\nexport default debounce;\n","<template>\n  <div\n    class=\"VueCarousel-slide\"\n    tabindex=\"-1\"\n    :aria-hidden=\"!isActive\"\n    role=\"tabpanel\"\n    :class=\"{\n      'VueCarousel-slide-active': isActive,\n      'VueCarousel-slide-center': isCenter,\n      'VueCarousel-slide-adjustableHeight': isAdjustableHeight,\n    }\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"slide\",\n  inject: [\"carousel\"],\n  props: [\"title\"],\nemits: ['slideclick', 'slide-click'],\n  data() {\n    return {\n      width: null,\n    };\n  },\n\n  computed: {\n    activeSlides() {\n      const { currentPage, breakpointSlidesPerPage, $children } = this.carousel;\n      const activeSlides = [];\n      const children = $children\n        .filter(\n          (child) =>\n            child.$el && child.$el.className.includes(\"VueCarousel-slide\")\n        )\n        .map((child) => child._uid);\n\n      let i = 0;\n      while (i < breakpointSlidesPerPage) {\n        const child = children[currentPage * breakpointSlidesPerPage + i];\n        activeSlides.push(child);\n        i++;\n      }\n\n      return activeSlides;\n    },\n    /**\n     * `isActive` describes whether a slide is visible\n     * @return {boolean}\n     */\n    isActive() {\n      return this.activeSlides.includes(this._uid);\n    },\n    /**\n     * `isCenter` describes whether a slide is in the center of all visible slides\n     * if perPage is an even number, we quit\n     * @return {boolean}\n     */\n    isCenter() {\n      const { breakpointSlidesPerPage } = this.carousel;\n      if (breakpointSlidesPerPage % 2 === 0 || !this.isActive) return false;\n      return (\n        this.activeSlides.indexOf(this._uid) ===\n        Math.floor(breakpointSlidesPerPage / 2)\n      );\n    },\n    /**\n     * `isAdjustableHeight` describes if the carousel adjusts its height to the active slide(s)\n     * @return {boolean}\n     */\n    isAdjustableHeight() {\n      const { adjustableHeight } = this.carousel;\n      return adjustableHeight;\n    },\n  },\n  mounted() {\n    if (!this.$isServer) {\n      this.$el.addEventListener(\"dragstart\", (e) => e.preventDefault());\n    }\n\n    this.$el.addEventListener(\n      this.carousel.isTouch ? \"touchend\" : \"mouseup\",\n      this.onTouchEnd\n    );\n  },\n  methods: {\n    onTouchEnd(e) {\n      /**\n       * @event slideclick\n       * @event slide-click\n       * @type {object}\n       */\n      const eventPosX =\n        this.carousel.isTouch && e.changedTouches && e.changedTouches.length > 0\n          ? e.changedTouches[0].clientX\n          : e.clientX;\n      const deltaX = this.carousel.dragStartX - eventPosX;\n\n      if (\n        this.carousel.minSwipeDistance === 0 ||\n        Math.abs(deltaX) < this.carousel.minSwipeDistance\n      ) {\n        this.$emit(\"slideclick\", Object.assign({}, e.currentTarget.dataset));\n        this.$emit(\"slide-click\", Object.assign({}, e.currentTarget.dataset));\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.VueCarousel-slide {\n  flex-basis: inherit;\n  flex-grow: 0;\n  flex-shrink: 0;\n  user-select: none;\n  backface-visibility: hidden;\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  outline: none;\n}\n\n.VueCarousel-slide-adjustableHeight {\n  display: table;\n  flex-basis: auto;\n  width: 100%;\n}\n</style>\n","import Carousel from \"./Carousel.vue\";\nimport Slide from \"./Slide.vue\";\n\nconst install = Vue => {\n  Vue.component(\"carousel\", Carousel);\n  Vue.component(\"slide\", Slide);\n};\n\nexport { install, Carousel, Slide };\n"],"names":["autoplay","props","type","Boolean","default","autoplayTimeout","Number","autoplayHoverPause","autoplayDirection","String","data","autoplayInterval","destroyed","this","$isServer","$el","removeEventListener","pauseAutoplay","startAutoplay","methods","clearInterval","setInterval","autoplayAdvancePage","restartAutoplay","advancePage","mounted","addEventListener","_hoisted_1","class","_hoisted_2","_hoisted_3","transitionEndNames","onwebkittransitionend","onmoztransitionend","onotransitionend","ontransitionend","getTransitionEnd","name","window","_sfc_main","components","Navigation","inject","clickTargetSize","nextLabel","prevLabel","emits","computed","canAdvanceForward","carousel","canAdvanceBackward","triggerPageAdvance","direction","$emit","_openBlock","_createElementBlock","_createElementVNode","tabindex","$options","_normalizeClass","style","_normalizeStyle","$props","onClick","_cache","_withModifiers","innerHTML","Pagination","paginationPositionModifierName","paginationPosition","includes","paginationPropertyBasedOnPosition","paginationCount","scrollPerPage","pageCount","slideCount","dotContainerStyle","maxPaginationDotCount","paginationPadding","doublePadding","containerWidth","paginationSize","overflow","width","margin","goToPage","index","isCurrentDot","currentPage","getDotTitle","$children","title","dotStyle","basicBtnStyle","Object","assign","padding","height","paginationActiveColor","paginationColor","eachDotsWidth","maxReverse","transformWidth","Math","ceil","transform","speed","transition","role","_Fragment","_renderList","page","key","value","$event","_vShow","mixins","provide","adjustableHeight","adjustableHeightEasing","centerMode","easing","validator","loop","minSwipeDistance","mouseDrag","touchDrag","navigateTo","Array","navigationClickTargetSize","navigationEnabled","navigationNextLabel","navigationPrevLabel","paginationEnabled","perPage","perPageCustom","resistanceCoef","spacePadding","spacePaddingMaxOffsetFactor","tagName","rtl","browserWidth","carouselWidth","dragging","dragMomentum","dragOffset","dragStartY","dragStartX","isTouch","offset","refreshRate","transitionstart","transitionend","currentHeight","breakpointSlidesPerPage","breakpointArray","matches","sort","a","b","filter","breakpoint","maxOffset","currentPerPage","currentOffset","isCenterModeEnabled","isHidden","max","slideWidth","isNavigationRequired","transitionStyle","transtion","watch","val","render","immediate","handler","setTimeout","$nextTick","beforeUpdate","computeCarouselWidth","beforeUnmount","detachMutationObserver","getBrowserWidth","$refs","handleTransitionStart","handleTransitionEnd","onStart","func","wait","timeout","clearTimeout","apply","debounce","onResize","attachMutationObserver","computeCarouselHeight","goToLastSlide","getNextPage","getPreviousPage","MutationObserver","WebKitMutationObserver","MozMutationObserver","config","attributes","__spreadProps","childList","subtree","characterData","mutationObserver","$parent","carouselInnerElements","getElementsByClassName","i","length","observe","handleNavigation","disconnect","innerWidth","getCarouselWidth","clientWidth","getCarouselHeight","slideOffset","maxSlideHeight","map","_","idx","getSlide","reduce","clientHeight","slide","getSlideCount","$slots","slot","tag","match","child","$vnode","advanceType","min","e","button","document","onEnd","onDrag","startTime","timeStamp","touches","clientX","clientY","eventPosX","changedTouches","deltaX","abs","sign","eventPosY","newOffsetX","newOffsetY","stopImmediatePropagation","nextOffset","sqrt","round","lastFullPageOffset","floor","remainderOffset","setCurrentPageInBounds","setPage","ref","$data","_renderSlot","_ctx","_createBlock","_component_navigation","onNavigationclick","_createCommentVNode","_createVNode","_component_pagination","onPaginationclick","activeSlides","children","className","_uid","push","isActive","isCenter","indexOf","isAdjustableHeight","preventDefault","onTouchEnd","currentTarget","dataset","exports","Vue","component","Carousel","Slide"],"mappings":"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"}