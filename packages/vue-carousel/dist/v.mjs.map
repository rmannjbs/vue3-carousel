{"version":3,"file":"v.mjs","sources":["../mixins/autoplay.js","../utils/debounce.js","../Navigation.vue","../Pagination.vue","../Carousel.vue","../Slide.vue","../index.js"],"sourcesContent":["const autoplay = {\n  props: {\n    /**\n     * Flag to enable autoplay\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Time elapsed before advancing slide\n     */\n    autoplayTimeout: {\n      type: Number,\n      default: 2000\n    },\n    /**\n     * Flag to pause autoplay on hover\n     */\n    autoplayHoverPause: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Autoplay direction. User can insert backward to make autoplay move from right to left\n     */\n    autoplayDirection: {\n      type: String,\n      default: \"forward\"\n    }\n  },\n  data() {\n    return {\n      autoplayInterval: null\n    };\n  },\n  destroyed() {\n    if (!this.$isServer) {\n      this.$el.removeEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.removeEventListener(\"mouseleave\", this.startAutoplay);\n    }\n  },\n  methods: {\n    pauseAutoplay() {\n      if (this.autoplayInterval) {\n        this.autoplayInterval = clearInterval(this.autoplayInterval);\n      }\n    },\n    startAutoplay() {\n      if (this.autoplay) {\n        this.autoplayInterval = setInterval(\n          this.autoplayAdvancePage,\n          this.autoplayTimeout\n        );\n      }\n    },\n    restartAutoplay() {\n      this.pauseAutoplay();\n      this.startAutoplay();\n    },\n    autoplayAdvancePage() {\n      this.advancePage(this.autoplayDirection);\n    }\n  },\n  mounted() {\n    if (!this.$isServer && this.autoplayHoverPause) {\n      this.$el.addEventListener(\"mouseenter\", this.pauseAutoplay);\n      this.$el.addEventListener(\"mouseleave\", this.startAutoplay);\n    }\n\n    this.startAutoplay();\n  }\n};\n\nexport default autoplay;\n","/*\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n*/\nconst debounce = (func, wait, immediate) => {\n  let timeout;\n  return () => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context);\n    }\n  };\n};\n\nexport default debounce;\n","<!-- eslint-disable vue/no-v-html -->\n<template>\n  <div class=\"VueCarousel-navigation\">\n    <button\n      type=\"button\"\n      aria-label=\"Previous page\"\n      :tabindex=\"canAdvanceBackward ? 0 : -1\"\n      class=\"VueCarousel-navigation-button VueCarousel-navigation-prev\"\n      :class=\"{ 'VueCarousel-navigation--disabled': !canAdvanceBackward }\"\n      :style=\"`padding: ${clickTargetSize}px; margin-right: -${clickTargetSize}px;`\"\n      @click.prevent=\"triggerPageAdvance('backward')\"\n      v-html=\"prevLabel\"\n    />\n    <button\n      type=\"button\"\n      aria-label=\"Next page\"\n      :tabindex=\"canAdvanceForward ? 0 : -1\"\n      class=\"VueCarousel-navigation-button VueCarousel-navigation-next\"\n      :class=\"{ 'VueCarousel-navigation--disabled': !canAdvanceForward }\"\n      :style=\"`padding: ${clickTargetSize}px; margin-left: -${clickTargetSize}px;`\"\n      @click.prevent=\"triggerPageAdvance('forward')\"\n      v-html=\"nextLabel\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"navigation\",\n  inject: [\"carousel\"],\n  props: {\n    /**\n     * Amount of padding to apply around the label in pixels\n     */\n    clickTargetSize: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * Text content of the navigation next button\n     */\n    nextLabel: {\n      type: String,\n      default: \"&#9654\",\n    },\n    /**\n     * Text content of the navigation prev button\n     */\n    prevLabel: {\n      type: String,\n      default: \"&#9664\",\n    },\n  },\nemits: ['navigationclick'],\n  computed: {\n    /**\n     * @return {boolean} Can the slider move forward?\n     */\n    canAdvanceForward() {\n      return this.carousel.canAdvanceForward || false;\n    },\n    /**\n     * @return {boolean} Can the slider move backward?\n     */\n    canAdvanceBackward() {\n      return this.carousel.canAdvanceBackward || false;\n    },\n  },\n  methods: {\n    /**\n     * Trigger page change on +/- 1 depending on the direction\n     * @param {\"backward\"} [direction]\n     * @return {void}\n     */\n    triggerPageAdvance(direction) {\n      /**\n       * @event paginationclick\n       * @type {string}\n       */\n      this.$emit(\"navigationclick\", direction);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.VueCarousel-navigation-button {\n  position: absolute;\n  top: 50%;\n  box-sizing: border-box;\n  color: #000;\n  text-decoration: none;\n  appearance: none;\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  outline: none;\n}\n\n.VueCarousel-navigation-button:focus {\n  outline: 1px solid lightblue;\n}\n\n.VueCarousel-navigation-next {\n  right: 0;\n  transform: translateY(-50%) translateX(100%);\n  font-family: \"system\";\n}\n\n.VueCarousel-navigation-prev {\n  left: 0;\n  transform: translateY(-50%) translateX(-100%);\n  font-family: \"system\";\n}\n\n.VueCarousel-navigation--disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n\n/* Define the \"system\" font family */\n@font-face {\n  font-family: system;\n  font-style: normal;\n  font-weight: 300;\n  src: local(\".SFNSText-Light\"), local(\".HelveticaNeueDeskInterface-Light\"),\n    local(\".LucidaGrandeUI\"), local(\"Ubuntu Light\"), local(\"Segoe UI Symbol\"),\n    local(\"Roboto-Light\"), local(\"DroidSans\"), local(\"Tahoma\");\n}\n</style>\n","<template>\n  <div\n    v-show=\"carousel.pageCount > 1\"\n    class=\"VueCarousel-pagination\"\n    :class=\"{ [`VueCarousel-pagination--${paginationPositionModifierName}`]: paginationPositionModifierName }\"\n  >\n    <div class=\"VueCarousel-dot-container\" role=\"tablist\" :style=\"dotContainerStyle\">\n      <button\n        v-for=\"(page, index) in paginationCount\"\n        :key=\"`${page}_${index}`\"\n        class=\"VueCarousel-dot\"\n        aria-hidden=\"false\"\n        role=\"tab\"\n        :title=\"getDotTitle(index)\"\n        :value=\"getDotTitle(index)\"\n        :aria-label=\"getDotTitle(index)\"\n        :aria-selected=\"isCurrentDot(index) ? 'true' : 'false'\"\n        :class=\"{ 'VueCarousel-dot--active': isCurrentDot(index) }\"\n        :style=\"dotStyle(index)\"\n        @click=\"goToPage(index)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"pagination\",\n  inject: [\"carousel\"],\nemits: ['paginationclick'],\n  computed: {\n    paginationPositionModifierName() {\n      const { paginationPosition } = this.carousel;\n      // guard to add only required class modifiers\n      if (!paginationPosition.includes(\"overlay\")) return;\n      return paginationPosition;\n    },\n    paginationPropertyBasedOnPosition() {\n      return this.carousel.paginationPosition.includes(\"top\")\n        ? \"bottom\"\n        : \"top\";\n    },\n    paginationCount() {\n      return this.carousel && this.carousel.scrollPerPage\n        ? this.carousel.pageCount\n        : this.carousel.slideCount || 0;\n    },\n    dotContainerStyle() {\n      const { carousel } = this;\n      if (carousel.maxPaginationDotCount === -1)\n        return {\n          \"margin-top\": `${carousel.paginationPadding * 2}px`\n        };\n      const doublePadding = carousel.paginationPadding * 2;\n      const containerWidth =\n        carousel.maxPaginationDotCount *\n        (carousel.paginationSize + doublePadding);\n      return {\n        \"margin-top\": `${carousel.paginationPadding * 2}px`,\n        overflow: \"hidden\",\n        width: `${containerWidth}px`,\n        margin: \"0 auto\",\n        \"white-space\": \"nowrap\"\n      };\n    }\n  },\n  methods: {\n    /**\n     * Change page by index\n     * @param {number} index\n     * return {void}\n     */\n    goToPage(index) {\n      /**\n       * @event paginationclick\n       * @type {number}\n       */\n      this.$emit(\"paginationclick\", index);\n    },\n\n    /**\n     * Check on current dot\n     * @param {number} index - dot index\n     * @return {boolean}\n     */\n    isCurrentDot(index) {\n      return index === this.carousel.currentPage;\n    },\n\n    /**\n     * Generate dot title\n     * @param {number} index - dot index\n     * @return {string}\n     */\n    getDotTitle(index) {\n      return this.carousel.$children[index].title\n        ? this.carousel.$children[index].title\n        : `Item ${index}`;\n    },\n    /**\n     * Control dots appear and disappear\n     * @param {number} index - dot index\n     * @return {object} - dot(buttn) style\n     */\n    dotStyle(index) {\n      const { carousel } = this;\n      const basicBtnStyle = {};\n      basicBtnStyle[\n        `margin-${this.paginationPropertyBasedOnPosition}`\n      ] = `${carousel.paginationPadding * 2}px`;\n\n      Object.assign(basicBtnStyle, {\n        padding: `${carousel.paginationPadding}px`,\n        width: `${carousel.paginationSize}px`,\n        height: `${carousel.paginationSize}px`,\n        \"background-color\": `${\n          this.isCurrentDot(index)\n            ? carousel.paginationActiveColor\n            : carousel.paginationColor\n        }`\n      });\n\n      if (carousel.maxPaginationDotCount === -1) return basicBtnStyle;\n\n      const eachDotsWidth =\n        carousel.paginationSize + carousel.paginationPadding * 2;\n      const maxReverse = carousel.pageCount - carousel.maxPaginationDotCount;\n      const translateAmount =\n        carousel.currentPage > maxReverse\n          ? maxReverse\n          : carousel.currentPage <= carousel.maxPaginationDotCount / 2\n            ? 0\n            : carousel.currentPage -\n              Math.ceil(carousel.maxPaginationDotCount / 2) +\n              1;\n      const transformWidth = 0 - eachDotsWidth * translateAmount;\n      return Object.assign(basicBtnStyle, {\n        \"-webkit-transform\": `translate3d(${transformWidth}px,0,0)`,\n        transform: `translate3d(${transformWidth}px,0,0)`,\n        \"-webkit-transition\": `-webkit-transform ${carousel.speed / 1000}s`,\n        transition: `transform ${carousel.speed / 1000}s`\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.VueCarousel-pagination {\n  width: 100%;\n  text-align: center;\n}\n\n.VueCarousel-pagination--top-overlay {\n  position: absolute;\n  top: 0;\n}\n\n.VueCarousel-pagination--bottom-overlay {\n  position: absolute;\n  bottom: 0;\n}\n\n.VueCarousel-dot-container {\n  display: inline-block;\n  margin: 0 auto;\n  padding: 0;\n}\n\n.VueCarousel-dot {\n  display: inline-block;\n  cursor: pointer;\n  appearance: none;\n  border: none;\n  background-clip: content-box;\n  box-sizing: content-box;\n  padding: 0;\n  border-radius: 100%;\n  outline: none;\n}\n\n.VueCarousel-dot:focus {\n  outline: 1px solid lightblue;\n}\n</style>\n","<template>\n  <div\n    class=\"VueCarousel\"\n    :class=\"{ 'VueCarousel--reverse': paginationPosition === 'top' }\"\n  >\n    <div ref=\"VueCarousel-wrapper\" class=\"VueCarousel-wrapper\">\n      <div\n        ref=\"VueCarousel-inner\"\n        :class=\"[\n          'VueCarousel-inner',\n          { 'VueCarousel-inner--center': isCenterModeEnabled },\n        ]\"\n        :style=\"{\n          transform: `translate(${currentOffset}px, 0)`,\n          transition: dragging ? 'none' : transitionStyle,\n          'ms-flex-preferred-size': `${slideWidth}px`,\n          'webkit-flex-basis': `${slideWidth}px`,\n          'flex-basis': `${slideWidth}px`,\n          visibility: slideWidth ? 'visible' : 'hidden',\n          height: `${currentHeight}`,\n          'padding-left': `${padding}px`,\n          'padding-right': `${padding}px`,\n        }\"\n      >\n        <slot />\n      </div>\n    </div>\n\n    <slot v-if=\"navigationEnabled\" name=\"navigation\">\n      <navigation\n        v-if=\"isNavigationRequired\"\n        :click-target-size=\"navigationClickTargetSize\"\n        :next-label=\"navigationNextLabel\"\n        :prev-label=\"navigationPrevLabel\"\n        @navigationclick=\"handleNavigation\"\n      />\n    </slot>\n\n    <slot v-if=\"paginationEnabled\" name=\"pagination\">\n      <pagination @paginationclick=\"goToPage($event, 'pagination')\" />\n    </slot>\n  </div>\n</template>\n<script>\nimport autoplay from \"./mixins/autoplay\";\nimport debounce from \"./utils/debounce\";\nimport Navigation from \"./Navigation.vue\";\nimport Pagination from \"./Pagination.vue\";\n\nconst transitionEndNames = {\n  onwebkittransitionend: \"webkitTransitionEnd\",\n  onmoztransitionend: \"transitionend\",\n  onotransitionend: \"oTransitionEnd otransitionend\",\n  ontransitionend: \"transitionend\",\n};\nconst getTransitionEnd = () => {\n  for (const name in transitionEndNames) {\n    if (name in window) {\n      return transitionEndNames[name];\n    }\n  }\n};\n\nexport default {\n  name: \"carousel\",\n  components: {\n    Navigation,\n    Pagination,\n  },\n  mixins: [autoplay],\n  // use `provide` to avoid `Slide` being nested with other components\n  provide() {\n    return {\n      carousel: this,\n    };\n  },\n  props: {\n    /**\n     *  Adjust the height of the carousel for the current slide\n     */\n    adjustableHeight: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Slide transition easing for adjustableHeight\n     * Any valid CSS transition easing accepted\n     */\n    adjustableHeightEasing: {\n      type: String,\n      default: \"ease\",\n    },\n    /**\n     *  Center images when the size is less than the container width\n     */\n    centerMode: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Slide transition easing\n     * Any valid CSS transition easing accepted\n     */\n    easing: {\n      type: String,\n      validator: function (value) {\n        return (\n          [\"ease\", \"linear\", \"ease-in\", \"ease-out\", \"ease-in-out\"].includes(\n            value\n          ) || value.includes(\"cubic-bezier\")\n        );\n      },\n      default: \"ease\",\n    },\n    /**\n     * Flag to make the carousel loop around when it reaches the end\n     */\n    loop: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Minimum distance for the swipe to trigger\n     * a slide advance\n     */\n    minSwipeDistance: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * Flag to toggle mouse dragging\n     */\n    mouseDrag: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Flag to toggle touch dragging\n     */\n    touchDrag: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Listen for an external navigation request using this prop.\n     */\n    navigateTo: {\n      type: [Number, Array],\n      default: 0,\n    },\n    /**\n     * Amount of padding to apply around the label in pixels\n     */\n    navigationClickTargetSize: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * Flag to render the navigation component\n     * (next/prev buttons)\n     */\n    navigationEnabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Text content of the navigation next button\n     */\n    navigationNextLabel: {\n      type: String,\n      default: \"&#9654\",\n    },\n    /**\n     * Text content of the navigation prev button\n     */\n    navigationPrevLabel: {\n      type: String,\n      default: \"&#9664\",\n    },\n    /**\n     * The fill color of the active pagination dot\n     * Any valid CSS color is accepted\n     */\n    paginationActiveColor: {\n      type: String,\n      default: \"#000000\",\n    },\n    /**\n     * The fill color of pagination dots\n     * Any valid CSS color is accepted\n     */\n    paginationColor: {\n      type: String,\n      default: \"#efefef\",\n    },\n    /**\n     * Flag to render pagination component\n     */\n    paginationEnabled: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * The padding inside each pagination dot\n     * Pixel values are accepted\n     */\n    paginationPadding: {\n      type: Number,\n      default: 10,\n    },\n    /**\n     * Configure the position for the pagination component.\n     * The possible values are: 'bottom', 'top', 'bottom-overlay' and 'top-overlay'\n     */\n    paginationPosition: {\n      type: String,\n      default: \"bottom\",\n    },\n    /**\n     * The size of each pagination dot\n     * Pixel values are accepted\n     */\n    paginationSize: {\n      type: Number,\n      default: 10,\n    },\n    /**\n     * Maximum number of slides displayed on each page\n     */\n    perPage: {\n      type: Number,\n      default: 2,\n    },\n    /**\n     * Configure the number of visible slides with a particular browser width.\n     * This will be an array of arrays, ex. [[320, 2], [1199, 4]]\n     * Formatted as [x, y] where x=browser width, and y=number of slides displayed.\n     * ex. [1199, 4] means if (window <= 1199) then show 4 slides per page\n     */\n    // eslint-disable-next-line vue/require-default-prop\n    perPageCustom: {\n      type: Array,\n    },\n    /**\n     * Resistance coefficient to dragging on the edge of the carousel\n     * This dictates the effect of the pull as you move towards the boundaries\n     */\n    resistanceCoef: {\n      type: Number,\n      default: 20,\n    },\n    /**\n     * Scroll per page, not per item\n     */\n    scrollPerPage: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     *  Space padding option adds left and right padding style (in pixels) onto VueCarousel-inner.\n     */\n    spacePadding: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     *  Specify by how much should the space padding value be multiplied of, to re-arange the final slide padding.\n     */\n    spacePaddingMaxOffsetFactor: {\n      type: Number,\n      default: 0,\n    },\n    /**\n     * Slide transition speed\n     * Number of milliseconds accepted\n     */\n    speed: {\n      type: Number,\n      default: 500,\n    },\n    /**\n     * Name (tag) of slide component\n     * Overwrite when extending slide component\n     */\n    tagName: {\n      type: String,\n      default: \"slide\",\n    },\n    /**\n     * Support for v-model functionality\n     */\n    // eslint-disable-next-line vue/require-default-prop\n    value: {\n      type: Number,\n    },\n    /**\n     * Support Max pagination dot amount\n     */\n    maxPaginationDotCount: {\n      type: Number,\n      default: -1,\n    },\n    /**\n     * Support right to left\n     */\n    rtl: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\n    \"transition-end\",\n    \"transitionEnd\",\n    \"transition-start\",\n    \"transitionStart\",\n    \"pagination-click\",\n    \"navigation-click\",\n    \"mounted\",\n    \"pageChange\",\n    \"page-change\",\n    \"input\",\n  ],\n  data() {\n    return {\n      browserWidth: null,\n      carouselWidth: 0,\n      currentPage: 0,\n      dragging: false,\n      dragMomentum: 0,\n      dragOffset: 0,\n      dragStartY: 0,\n      dragStartX: 0,\n      isTouch: typeof window !== \"undefined\" && \"ontouchstart\" in window,\n      offset: 0,\n      refreshRate: 16,\n      slideCount: 0,\n      transitionstart: \"transitionstart\",\n      transitionend: \"transitionend\",\n      currentHeight: \"auto\",\n    };\n  },\n  computed: {\n    /**\n     * Given a viewport width, find the number of slides to display\n     * @return {number} Number of slides to display\n     */\n    breakpointSlidesPerPage() {\n      if (!this.perPageCustom) {\n        return this.perPage;\n      }\n\n      const breakpointArray = this.perPageCustom;\n      const width = this.browserWidth;\n\n      const breakpoints = breakpointArray.sort((a, b) =>\n        a[0] > b[0] ? -1 : 1\n      );\n\n      // Reduce the breakpoints to entries where the width is in range\n      // The breakpoint arrays are formatted as [widthToMatch, numberOfSlides]\n      const matches = breakpoints.filter(\n        (breakpoint) => width >= breakpoint[0]\n      );\n\n      // If there is a match, the result should return only\n      // the slide count from the first matching breakpoint\n      const match = matches[0] && matches[0][1];\n\n      return match || this.perPage;\n    },\n    /**\n     * @return {boolean} Can the slider move forward?\n     */\n    canAdvanceForward() {\n      return this.loop || this.offset < this.maxOffset;\n    },\n    /**\n     * @return {boolean} Can the slider move backward?\n     */\n    canAdvanceBackward() {\n      return this.loop || this.currentPage > 0;\n    },\n    /**\n     * Number of slides to display per page in the current context.\n     * This is constant unless responsive perPage option is set.\n     * @return {number} The number of slides per page to display\n     */\n    currentPerPage() {\n      return !this.perPageCustom || this.$isServer\n        ? this.perPage\n        : this.breakpointSlidesPerPage;\n    },\n    /**\n     * The horizontal distance the inner wrapper is offset while navigating.\n     * @return {number} Pixel value of offset to apply\n     */\n    currentOffset() {\n      if (this.isCenterModeEnabled) {\n        return 0;\n      } else if (this.rtl) {\n        return (this.offset - this.dragOffset) * 1;\n      } else {\n        return (this.offset + this.dragOffset) * -1;\n      }\n    },\n    isHidden() {\n      return this.carouselWidth <= 0;\n    },\n    /**\n     * Maximum offset the carousel can slide\n     * Considering the spacePadding\n     * @return {number}\n     */\n    maxOffset() {\n      return Math.max(\n        this.slideWidth * (this.slideCount - this.currentPerPage) -\n          this.spacePadding * this.spacePaddingMaxOffsetFactor,\n        0\n      );\n    },\n    /**\n     * Calculate the number of pages of slides\n     * @return {number} Number of pages\n     */\n    pageCount() {\n      return this.scrollPerPage\n        ? Math.ceil(this.slideCount / this.currentPerPage)\n        : this.slideCount - this.currentPerPage + 1;\n    },\n    /**\n     * Calculate the width of each slide\n     * @return {number} Slide width\n     */\n    slideWidth() {\n      const width = this.carouselWidth - this.spacePadding * 2;\n      const perPage = this.currentPerPage;\n\n      return width / perPage;\n    },\n    /**\n     * @return {boolean} Is navigation required?\n     */\n    isNavigationRequired() {\n      return this.slideCount > this.currentPerPage;\n    },\n    /**\n     * @return {boolean} Center images when have less than min currentPerPage value\n     */\n    isCenterModeEnabled() {\n      return this.centerMode && !this.isNavigationRequired;\n    },\n    transitionStyle() {\n      const speed = `${this.speed / 1000}s`;\n      const transtion = `${speed} ${this.easing} transform`;\n      if (this.adjustableHeight) {\n        return `${transtion}, height ${speed} ${\n          this.adjustableHeightEasing || this.easing\n        }`;\n      }\n\n      return transtion;\n    },\n    padding() {\n      const padding = this.spacePadding;\n      return padding > 0 ? padding : false;\n    },\n  },\n  watch: {\n    value(val) {\n      if (val !== this.currentPage) {\n        this.goToPage(val);\n        this.render();\n      }\n    },\n    navigateTo: {\n      immediate: true,\n      handler(val) {\n        // checking if val is an array, for arrays typeof returns object\n        if (typeof val === \"object\") {\n          if (val[1] == false) {\n            // following code is to disable animation\n            this.dragging = true;\n\n            // clear dragging after refresh rate\n            setTimeout(() => {\n              this.dragging = false;\n            }, this.refreshRate);\n          }\n\n          this.$nextTick(() => {\n            this.goToPage(val[0]);\n          });\n        } else {\n          this.$nextTick(() => {\n            this.goToPage(val);\n          });\n        }\n      },\n    },\n    currentPage(val) {\n      this.$emit(\"pageChange\", val);\n      this.$emit(\"page-change\", val);\n      this.$emit(\"input\", val);\n    },\n    autoplay(val) {\n      if (val === false) {\n        this.pauseAutoplay();\n      } else {\n        this.restartAutoplay();\n      }\n    },\n  },\n  beforeUpdate() {\n    this.computeCarouselWidth();\n  },\n  beforeUnmount() {\n    this.detachMutationObserver();\n    window.removeEventListener(\"resize\", this.getBrowserWidth);\n    this.$refs[\"VueCarousel-inner\"].removeEventListener(\n      this.transitionstart,\n      this.handleTransitionStart\n    );\n    this.$refs[\"VueCarousel-inner\"].removeEventListener(\n      this.transitionend,\n      this.handleTransitionEnd\n    );\n\n    this.$refs[\"VueCarousel-wrapper\"].removeEventListener(\n      this.isTouch ? \"touchstart\" : \"mousedown\",\n      this.onStart\n    );\n  },\n  mounted() {\n    window.addEventListener(\n      \"resize\",\n      debounce(this.onResize, this.refreshRate)\n    );\n\n    // setup the start event only if touch device or mousedrag activated\n    if ((this.isTouch && this.touchDrag) || this.mouseDrag) {\n      this.$refs[\"VueCarousel-wrapper\"].addEventListener(\n        this.isTouch ? \"touchstart\" : \"mousedown\",\n        this.onStart\n      );\n    }\n\n    this.attachMutationObserver();\n    this.computeCarouselWidth();\n    this.computeCarouselHeight();\n\n    this.transitionstart = getTransitionEnd();\n    this.$refs[\"VueCarousel-inner\"].addEventListener(\n      this.transitionstart,\n      this.handleTransitionStart\n    );\n    this.transitionend = getTransitionEnd();\n    this.$refs[\"VueCarousel-inner\"].addEventListener(\n      this.transitionend,\n      this.handleTransitionEnd\n    );\n\n    this.$emit(\"mounted\");\n\n    // when autoplay direction is backward start from the last slide\n    if (this.autoplayDirection === \"backward\") {\n      this.goToLastSlide();\n    }\n  },\n  methods: {\n    /**\n     * @return {number} The index of the next page\n     */\n    getNextPage() {\n      if (this.currentPage < this.pageCount - 1) {\n        return this.currentPage + 1;\n      }\n      return this.loop ? 0 : this.currentPage;\n    },\n    /**\n     * @return {number} The index of the previous page\n     */\n    getPreviousPage() {\n      if (this.currentPage > 0) {\n        return this.currentPage - 1;\n      }\n      return this.loop ? this.pageCount - 1 : this.currentPage;\n    },\n    /**\n     * Increase/decrease the current page value\n     * @param  {string} direction (Optional) The direction to advance\n     */\n    advancePage(direction) {\n      if (direction && direction === \"backward\" && this.canAdvanceBackward) {\n        this.goToPage(this.getPreviousPage(), \"navigation\");\n      } else if (\n        (!direction || (direction && direction !== \"backward\")) &&\n        this.canAdvanceForward\n      ) {\n        this.goToPage(this.getNextPage(), \"navigation\");\n      }\n    },\n    goToLastSlide() {\n      // following code is to disable animation\n      this.dragging = true;\n\n      // clear dragging after refresh rate\n      setTimeout(() => {\n        this.dragging = false;\n      }, this.refreshRate);\n\n      this.$nextTick(() => {\n        this.goToPage(this.pageCount);\n      });\n    },\n    /**\n     * A mutation observer is used to detect changes to the containing node\n     * in order to keep the magnet container in sync with the height its reference node.\n     */\n    attachMutationObserver() {\n      const MutationObserver =\n        window.MutationObserver ||\n        window.WebKitMutationObserver ||\n        window.MozMutationObserver;\n\n      if (MutationObserver) {\n        let config = {\n          attributes: true,\n          data: true,\n        };\n        if (this.adjustableHeight) {\n          config = {\n            ...config,\n            childList: true,\n            subtree: true,\n            characterData: true,\n          };\n        }\n        this.mutationObserver = new MutationObserver(() => {\n          this.$nextTick(() => {\n            this.computeCarouselWidth();\n            this.computeCarouselHeight();\n          });\n        });\n        if (this.$parent.$el) {\n          const carouselInnerElements =\n            this.$el.getElementsByClassName(\"VueCarousel-inner\");\n          for (let i = 0; i < carouselInnerElements.length; i++) {\n            this.mutationObserver.observe(carouselInnerElements[i], config);\n          }\n        }\n      }\n    },\n    handleNavigation(direction) {\n      this.advancePage(direction);\n      this.pauseAutoplay();\n      this.$emit(\"navigation-click\", direction);\n    },\n    /**\n     * Stop listening to mutation changes\n     */\n    detachMutationObserver() {\n      if (this.mutationObserver) {\n        this.mutationObserver.disconnect();\n      }\n    },\n    /**\n     * Get the current browser viewport width\n     * @return {number} Browser\"s width in pixels\n     */\n    getBrowserWidth() {\n      this.browserWidth = window.innerWidth;\n      return this.browserWidth;\n    },\n    /**\n     * Get the width of the carousel DOM element\n     * @return {number} Width of the carousel in pixels\n     */\n    getCarouselWidth() {\n      const carouselInnerElements =\n        this.$el.getElementsByClassName(\"VueCarousel-inner\");\n      for (let i = 0; i < carouselInnerElements.length; i++) {\n        if (carouselInnerElements[i].clientWidth > 0) {\n          this.carouselWidth = carouselInnerElements[i].clientWidth || 0;\n        }\n      }\n      return this.carouselWidth;\n    },\n    /**\n     * Get the maximum height of the carousel active slides\n     * @return {string} The carousel height\n     */\n    getCarouselHeight() {\n      if (!this.adjustableHeight) {\n        return \"auto\";\n      }\n\n      const slideOffset = this.currentPerPage * (this.currentPage + 1) - 1;\n      const maxSlideHeight = [...Array(this.currentPerPage)]\n        .map((_, idx) => this.getSlide(slideOffset + idx))\n        .reduce(\n          (clientHeight, slide) =>\n            Math.max(clientHeight, (slide && slide.$el.clientHeight) || 0),\n          0\n        );\n\n      this.currentHeight =\n        maxSlideHeight === 0 ? \"auto\" : `${maxSlideHeight}px`;\n\n      return this.currentHeight;\n    },\n    /**\n     * Filter slot contents to slide instances and return length\n     * @return {number} The number of slides\n     */\n    getSlideCount() {\n      this.slideCount =\n        (this.$slots &&\n          this.$slots.default &&\n          this.$slots.default.filter(\n            (slot) =>\n              slot.tag &&\n              slot.tag.match(`^vue-component-\\\\d+-${this.tagName}$`) !== null\n          ).length) ||\n        0;\n    },\n    /**\n     * Gets the slide at the specified index\n     * @return {object} The slide at the specified index\n     */\n    getSlide(index) {\n      const slides = this.$children.filter(\n        (child) =>\n          child.$vnode.tag.match(`^vue-component-\\\\d+-${this.tagName}$`) !==\n          null\n      );\n      return slides[index];\n    },\n    /**\n     * Set the current page to a specific value\n     * This function will only apply the change if the value is within the carousel bounds\n     * for carousel scrolling per page.\n     * @param  {number} page The value of the new page number\n     * @param  {string|undefined} advanceType An optional value describing the type of page advance\n     */\n    goToPage(page, advanceType) {\n      if (page >= 0 && page <= this.pageCount) {\n        this.offset = this.scrollPerPage\n          ? Math.min(\n              this.slideWidth * this.currentPerPage * page,\n              this.maxOffset\n            )\n          : this.slideWidth * page;\n\n        // restart autoplay if specified\n        if (this.autoplay && !this.autoplayHoverPause) {\n          this.restartAutoplay();\n        }\n\n        // update the current page\n        this.currentPage = page;\n\n        if (advanceType === \"pagination\") {\n          this.pauseAutoplay();\n          this.$emit(\"pagination-click\", page);\n        }\n      }\n    },\n    /**\n     * Trigger actions when mouse is pressed\n     * @param  {object} e The event object\n     */\n    /* istanbul ignore next */\n    onStart(e) {\n      // alert(\"start\");\n\n      // detect right click\n      if (e.button == 2) {\n        return;\n      }\n\n      document.addEventListener(\n        this.isTouch ? \"touchend\" : \"mouseup\",\n        this.onEnd,\n        true\n      );\n\n      document.addEventListener(\n        this.isTouch ? \"touchmove\" : \"mousemove\",\n        this.onDrag,\n        true\n      );\n\n      this.startTime = e.timeStamp;\n      this.dragging = true;\n      this.dragStartX = this.isTouch ? e.touches[0].clientX : e.clientX;\n      this.dragStartY = this.isTouch ? e.touches[0].clientY : e.clientY;\n    },\n    /**\n     * Trigger actions when mouse is released\n     * @param  {object} e The event object\n     */\n\n    onEnd(e) {\n      // restart autoplay if specified\n      if (this.autoplay && !this.autoplayHoverPause) {\n        this.restartAutoplay();\n      }\n      this.pauseAutoplay();\n\n      // compute the momemtum speed\n      const eventPosX = this.isTouch ? e.changedTouches[0].clientX : e.clientX;\n      const deltaX = this.dragStartX - eventPosX;\n      this.dragMomentum = deltaX / (e.timeStamp - this.startTime);\n\n      // take care of the minSwipteDistance prop, if not 0 and delta is bigger than delta\n      if (\n        this.minSwipeDistance !== 0 &&\n        Math.abs(deltaX) >= this.minSwipeDistance\n      ) {\n        const width = this.scrollPerPage\n          ? this.slideWidth * this.currentPerPage\n          : this.slideWidth;\n        this.dragOffset = this.dragOffset + Math.sign(deltaX) * (width / 2);\n      }\n\n      if (this.rtl) {\n        this.offset -= this.dragOffset;\n      } else {\n        this.offset += this.dragOffset;\n      }\n      this.dragOffset = 0;\n      this.dragging = false;\n\n      this.render();\n\n      // clear events listeners\n      document.removeEventListener(\n        this.isTouch ? \"touchend\" : \"mouseup\",\n        this.onEnd,\n        true\n      );\n      document.removeEventListener(\n        this.isTouch ? \"touchmove\" : \"mousemove\",\n        this.onDrag,\n        true\n      );\n    },\n    /**\n     * Trigger actions when mouse is pressed and then moved (mouse drag)\n     * @param  {object} e The event object\n     */\n    onDrag(e) {\n      const eventPosX = this.isTouch ? e.touches[0].clientX : e.clientX;\n      const eventPosY = this.isTouch ? e.touches[0].clientY : e.clientY;\n      const newOffsetX = this.dragStartX - eventPosX;\n      const newOffsetY = this.dragStartY - eventPosY;\n\n      // if it is a touch device, check if we are below the min swipe threshold\n      // (if user scroll the page on the component)\n      if (this.isTouch && Math.abs(newOffsetX) < Math.abs(newOffsetY)) {\n        return;\n      }\n\n      e.stopImmediatePropagation();\n\n      this.dragOffset = newOffsetX;\n      const nextOffset = this.offset + this.dragOffset;\n\n      if (this.rtl) {\n        if (this.offset == 0 && this.dragOffset > 0) {\n          this.dragOffset = Math.sqrt(this.resistanceCoef * this.dragOffset);\n        } else if (this.offset == this.maxOffset && this.dragOffset < 0) {\n          this.dragOffset = -Math.sqrt(-this.resistanceCoef * this.dragOffset);\n        }\n      } else {\n        if (nextOffset < 0) {\n          this.dragOffset = -Math.sqrt(-this.resistanceCoef * this.dragOffset);\n        } else if (nextOffset > this.maxOffset) {\n          this.dragOffset = Math.sqrt(this.resistanceCoef * this.dragOffset);\n        }\n      }\n    },\n    onResize() {\n      this.computeCarouselWidth();\n      this.computeCarouselHeight();\n\n      this.dragging = true; // force a dragging to disable animation\n      this.render();\n      // clear dragging after refresh rate\n      setTimeout(() => {\n        this.dragging = false;\n      }, this.refreshRate);\n    },\n    render() {\n      // add extra slides depending on the momemtum speed\n      if (this.rtl) {\n        this.offset -=\n          Math.max(\n            -this.currentPerPage + 1,\n            Math.min(Math.round(this.dragMomentum), this.currentPerPage - 1)\n          ) * this.slideWidth;\n      } else {\n        this.offset +=\n          Math.max(\n            -this.currentPerPage + 1,\n            Math.min(Math.round(this.dragMomentum), this.currentPerPage - 1)\n          ) * this.slideWidth;\n      }\n\n      // & snap the new offset on a slide or page if scrollPerPage\n      const width = this.scrollPerPage\n        ? this.slideWidth * this.currentPerPage\n        : this.slideWidth;\n\n      // lock offset to either the nearest page, or to the last slide\n      const lastFullPageOffset =\n        width * Math.floor(this.slideCount / (this.currentPerPage - 1));\n      const remainderOffset =\n        lastFullPageOffset +\n        this.slideWidth * (this.slideCount % this.currentPerPage);\n      if (this.offset > (lastFullPageOffset + remainderOffset) / 2) {\n        this.offset = remainderOffset;\n      } else {\n        this.offset = width * Math.round(this.offset / width);\n      }\n\n      // clamp the offset between 0 -> maxOffset\n      this.offset = Math.max(0, Math.min(this.offset, this.maxOffset));\n\n      // update the current page\n      this.currentPage = this.scrollPerPage\n        ? Math.round(this.offset / this.slideWidth / this.currentPerPage)\n        : Math.round(this.offset / this.slideWidth);\n    },\n    /**\n     * Re-compute the width of the carousel and its slides\n     */\n    computeCarouselWidth() {\n      this.getSlideCount();\n      this.getBrowserWidth();\n      this.getCarouselWidth();\n      this.setCurrentPageInBounds();\n    },\n    /**\n     * Re-compute the height of the carousel and its slides\n     */\n    computeCarouselHeight() {\n      this.getCarouselHeight();\n    },\n    /**\n     * When the current page exceeds the carousel bounds, reset it to the maximum allowed\n     */\n    setCurrentPageInBounds() {\n      if (!this.canAdvanceForward && this.scrollPerPage) {\n        const setPage = this.pageCount - 1;\n        this.currentPage = setPage >= 0 ? setPage : 0;\n        this.offset = Math.max(0, Math.min(this.offset, this.maxOffset));\n      }\n    },\n    handleTransitionStart() {\n      this.$emit(\"transitionStart\");\n      this.$emit(\"transition-start\");\n    },\n    handleTransitionEnd() {\n      this.$emit(\"transitionEnd\");\n      this.$emit(\"transition-end\");\n    },\n  },\n};\n</script>\n<style>\n.VueCarousel {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.VueCarousel--reverse {\n  flex-direction: column-reverse;\n}\n\n.VueCarousel-wrapper {\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n}\n\n.VueCarousel-inner {\n  display: flex;\n  flex-direction: row;\n  backface-visibility: hidden;\n}\n\n.VueCarousel-inner--center {\n  justify-content: center;\n}\n</style>\n","<template>\n  <div\n    class=\"VueCarousel-slide\"\n    tabindex=\"-1\"\n    :aria-hidden=\"!isActive\"\n    role=\"tabpanel\"\n    :class=\"{\n      'VueCarousel-slide-active': isActive,\n      'VueCarousel-slide-center': isCenter,\n      'VueCarousel-slide-adjustableHeight': isAdjustableHeight,\n    }\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"slide\",\n  inject: [\"carousel\"],\n  props: [\"title\"],\nemits: ['slideclick', 'slide-click'],\n  data() {\n    return {\n      width: null,\n    };\n  },\n\n  computed: {\n    activeSlides() {\n      const { currentPage, breakpointSlidesPerPage, $children } = this.carousel;\n      const activeSlides = [];\n      const children = $children\n        .filter(\n          (child) =>\n            child.$el && child.$el.className.includes(\"VueCarousel-slide\")\n        )\n        .map((child) => child._uid);\n\n      let i = 0;\n      while (i < breakpointSlidesPerPage) {\n        const child = children[currentPage * breakpointSlidesPerPage + i];\n        activeSlides.push(child);\n        i++;\n      }\n\n      return activeSlides;\n    },\n    /**\n     * `isActive` describes whether a slide is visible\n     * @return {boolean}\n     */\n    isActive() {\n      return this.activeSlides.includes(this._uid);\n    },\n    /**\n     * `isCenter` describes whether a slide is in the center of all visible slides\n     * if perPage is an even number, we quit\n     * @return {boolean}\n     */\n    isCenter() {\n      const { breakpointSlidesPerPage } = this.carousel;\n      if (breakpointSlidesPerPage % 2 === 0 || !this.isActive) return false;\n      return (\n        this.activeSlides.indexOf(this._uid) ===\n        Math.floor(breakpointSlidesPerPage / 2)\n      );\n    },\n    /**\n     * `isAdjustableHeight` describes if the carousel adjusts its height to the active slide(s)\n     * @return {boolean}\n     */\n    isAdjustableHeight() {\n      const { adjustableHeight } = this.carousel;\n      return adjustableHeight;\n    },\n  },\n  mounted() {\n    if (!this.$isServer) {\n      this.$el.addEventListener(\"dragstart\", (e) => e.preventDefault());\n    }\n\n    this.$el.addEventListener(\n      this.carousel.isTouch ? \"touchend\" : \"mouseup\",\n      this.onTouchEnd\n    );\n  },\n  methods: {\n    onTouchEnd(e) {\n      /**\n       * @event slideclick\n       * @event slide-click\n       * @type {object}\n       */\n      const eventPosX =\n        this.carousel.isTouch && e.changedTouches && e.changedTouches.length > 0\n          ? e.changedTouches[0].clientX\n          : e.clientX;\n      const deltaX = this.carousel.dragStartX - eventPosX;\n\n      if (\n        this.carousel.minSwipeDistance === 0 ||\n        Math.abs(deltaX) < this.carousel.minSwipeDistance\n      ) {\n        this.$emit(\"slideclick\", Object.assign({}, e.currentTarget.dataset));\n        this.$emit(\"slide-click\", Object.assign({}, e.currentTarget.dataset));\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.VueCarousel-slide {\n  flex-basis: inherit;\n  flex-grow: 0;\n  flex-shrink: 0;\n  user-select: none;\n  backface-visibility: hidden;\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  outline: none;\n}\n\n.VueCarousel-slide-adjustableHeight {\n  display: table;\n  flex-basis: auto;\n  width: 100%;\n}\n</style>\n","import Carousel from \"./Carousel.vue\";\nimport Slide from \"./Slide.vue\";\n\nconst install = Vue => {\n  Vue.component(\"carousel\", Carousel);\n  Vue.component(\"slide\", Slide);\n};\n\nexport { install, Carousel, Slide };\n"],"names":["this","_sfc_main","_hoisted_1","_openBlock","_createElementBlock","_createElementVNode","_normalizeClass","_normalizeStyle","_withModifiers","_Fragment","_renderList","_vShow","_renderSlot","_createBlock","_createCommentVNode","_createVNode"],"mappings":"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"}